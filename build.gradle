wrapper {
    gradleVersion = "5.5.1"
}

buildscript {
    
    ext {
        springVersion = "5.1.9.RELEASE"
        springBootVersion = "2.1.6.RELEASE"
        springCloudVersion = "Greenwich.RELEASE"
        kotlinVersion = "1.3.50"
        profile = "local"
    }

    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://repo.spring.io/plugins-release" }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
        gradlePluginPortal()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "io.spring.gradle:propdeps-plugin:0.0.10.RELEASE"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.22.1"
    }
}

allprojects {
    group = "me.chat"
    version = "0.1.0"
}

subprojects {

    apply plugin: "java"
    apply plugin: "maven-publish"
    apply plugin: "kotlin"
    apply plugin: "kotlin-spring"

    if (project.name != "common" && project.name != "dao") {
        apply plugin: "io.spring.dependency-management"
        apply plugin: "org.springframework.boot"
        apply plugin: "com.palantir.docker"
    }

    repositories {
        mavenCentral()
        maven { url "https://repo.maven.apache.org/maven2" }
        maven { url "https://maven.java.net/content/repositories/staging/" }
    }

    dependencies {
        implementation platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
        implementation platform("org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion")

        implementation "com.google.code.gson:gson:2.8.5"
        implementation "net.logstash.logback:logstash-logback-encoder:5.2"

    }

    sourceCompatibility = "12"

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    if (project.name != "common" && project.name != "dao") {
        
        bootRun {
            jvmArgs = ["-Xmx600m", "--enable-preview"]
            args = ["--spring.profiles.active=" + profile]
        }

        bootJar {
            archiveVersion = null
        }

        docker {
            name "neohd/onlinevisits:latest"
            dockerfile rootProject.file('docker/Dockerfile')
            files bootJar.archivePath
            buildArgs([ARTIFACT_NAME: "${bootJar.archiveName}"])
            dependsOn compileKotlin
            dependsOn compileTestKotlin
            dependsOn bootJar
        }

        /*dockerPrepare {
            could be used to change docker build directory (current: build/docker)
        }*/

    }

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
}
