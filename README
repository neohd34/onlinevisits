Online Visits project: backend.

To start:
./start.sh

Обычно пишу ридми и коменты на английском, сейчас для простоты и скорости напишу на русском.

Самый точный и достаточно простой вариант видится с использованием вебсокетов (либо хартбита, если по какой-то причине они
не поддерживаются). При загрузке страницы устанавливается коннект и шлются обновления. В зависимости от текущей нагрузки
на сайт, скорость обновлений можно регулировать, чтобы не завалить сервак, например (вплоть до 1 обновления на 1 переход).

Вебсокеты реализуются либо через спринг и кафку(рэббит), либо можно руками написать на более низком уровне.

Таким образом, на сервере есть все данные по каждому юзеру, продолжительности его сессии, как в общем, так и постранично.
Хранить данные о переходах (визитах) вместе с продолжительностью сессий можно в очереди(кафка), которую потом в отдельном
месте читаем и записываем уже переработанные данные в аналитику (Clickhouse). Из аналитики можно получать любые срезы за
любые промежутки времени, в т.ч. в реальном времени.

Если по какой-то причине такой вариант не подходит, то возьмем крайний случай - посылаем данные на сервер только вместе с
переходом на новую страницу. В этом варианте погрешность большая, но и нагрузка на сервер минимальная. Соответсвенно,
имеем данные о последнем моменте, когда мы видели юзера(переход на страницу) и предполагаем, что с этого момента и по
настоящее время, он все еще онлайн (например между 1 и 2 минутами). При запросе кол-ва онлайн пользователей
ищем в кеше пользователей с полем lastSeen от 1 до 2 минут назад.

Этот вариант реализован здесь. Я намеренно не писал тесты и на брал никакие базы для экономии времени, а просто использовал
кеш Hazelcast (кеш можно добавить и к основному варианту с вебсокетами, чтобы меньше грузить бд). Я не учитывал вариант,
при котором юзер просто обновляет страницу - это считается новым переходом.
Тесты пишу обычно: юнит и интеграционные. Заодно я оставил кое-какую логику из других проектов, например, гео-ип сервис.



Для обычных рест вызовов можно юзать свагер, для webflux не так просто, но тоже можно настроить.

Визит:
http://localhost:8085/visits?session=7f4f948c-198c-4e90-806e-703fccd5d6e4

Посмотреть юзеров (все визиты и между 1 и 2 минутами). Через 1 минуту юзер после визита появляется в betweenFromAndTo,
через 2 минуты, если юзер больше не делал переходов, запись о нем очищается.
http://localhost:8085/visitors